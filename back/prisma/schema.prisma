// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           String     @id
  name         String
  email        String     @unique
  cpf          String     @unique
  phone        String
  birth        String?
  description  String?
  password     String
  account_type Boolean    @default(false)
  is_active    Boolean    @default(true)
  avatar_url   String?
  reset_token  String?
  created_at   String
  address      Address?
  comments     Comments[]
  adverts      Advert[]

  @@map("users")
}

model Address {
  id         String  @id
  cep        String
  state      String
  city       String
  street     String
  number     String
  complement String? @default("none")
  created_at String
  user       Users   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String  @unique

  @@map("address")
}

model Advert {
  id               String     @id
  brand            String
  model            String
  year             Int
  fuel             Fuel
  km               Int
  color            String
  table_fipe_price Int
  price            Int
  description      String
  image_cape       String
  is_active        Boolean    @default(true)
  user             Users?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String?
  gallery          Gallery[]
  comments         Comments[]

  @@map("advert")
}

model Comments {
  id         String   @id @default(uuid())
  comment    String
  created_at DateTime @default(now())
  user       Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  advert     Advert   @relation(fields: [advertId], references: [id], onDelete: Cascade)
  advertId   String

  @@map("comments")
}

model Gallery {
  id        String  @id
  image_url String
  Advert    Advert? @relation(fields: [advertId], references: [id], onDelete: Cascade)
  advertId  String?

  @@map("gallery")
}

enum Fuel {
  ELECTRIC
  ETHANOL
  HYBRID
}
